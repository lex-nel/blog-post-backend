generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  email        String         @unique
  password     String
  firstName    String?
  midName      String?
  lastName     String?
  posts        Post[]
  comments     Comment[]
  PostLikes    PostLikes[]
  CommentLikes CommentLikes[]
}

model Post {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  publishedAt DateTime?
  isPublished Boolean       @default(false)
  image       String
  title       String
  longTitle   String
  content     String
  author      User          @relation(fields: [authorId], references: [id])
  authorId    Int
  comments    Comment[]
  tags        TagsOnPosts[]
  likes       PostLikes[]
}

model Comment {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  content   String
  author    User?          @relation(fields: [authorId], references: [id])
  authorId  Int?
  post      Post?          @relation(fields: [postId], references: [id])
  postId    Int?
  likes     CommentLikes[]
}

model Tag {
  id        Int           @id @default(autoincrement())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  title     String
  posts     TagsOnPosts[]
}

model TagsOnPosts {
  post   Post @relation(fields: [postId], references: [id])
  postId Int
  Tag    Tag  @relation(fields: [tagId], references: [id])
  tagId  Int

  @@id([postId, tagId])
}

model PostLikes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  Post      Post?    @relation(fields: [postId], references: [id])
  postId    Int?
}

model CommentLikes {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int
  Comment   Comment? @relation(fields: [commentId], references: [id])
  commentId Int?
}
