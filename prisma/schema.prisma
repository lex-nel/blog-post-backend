generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

enum PostCategory {
  NEWS
  BLOG
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstName String?
  midName   String?
  lastName  String?
  posts     Post[]
  // comments  Comment[]
}

model Post {
  id           Int          @id @default(autoincrement())
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  publishedAt  DateTime?
  isPublished  Boolean      @default(false)
  postCategory PostCategory @default(BLOG)
  image        String
  title        String
  longTitle    String
  content      String
  author       User         @relation(fields: [authorId], references: [id])
  authorId     Int
  // comments     Comment[]
  // tags         TagsOnPosts[]
}

// model Comment {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   content   String
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  Int?
//   post      Post?    @relation(fields: [postId], references: [id])
//   postId    Int?
// }

// model Tag {
//   id        Int           @id @default(autoincrement())
//   createdAt DateTime      @default(now())
//   updatedAt DateTime      @updatedAt
//   title     String
//   posts     TagsOnPosts[]
// }

// model TagsOnPosts {
//   post   Post @relation(fields: [postId], references: [id])
//   postId Int
//   Tag    Tag  @relation(fields: [tagId], references: [id])
//   tagId  Int

//   @@id([postId, tagId])
// }
